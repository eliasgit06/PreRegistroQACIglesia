//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QACIglesia.Infrastructure.ServiceReferenceInfotep {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://infotep.gob.do/CWS", ConfigurationName="ServiceReferenceInfotep.CertificadosWSSoap")]
    public interface CertificadosWSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://infotep.gob.do/CWS/CertificadosParticipanteDocumento", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable CertificadosParticipanteDocumento(string NombreUsuario, string Token, string NoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://infotep.gob.do/CWS/CertificadosParticipanteDocumento", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> CertificadosParticipanteDocumentoAsync(string NombreUsuario, string Token, string NoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://infotep.gob.do/CWS/CertificadosParticipanteNombre", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable CertificadosParticipanteNombre(string NombreUsuario, string Token, string Nombre, string Apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://infotep.gob.do/CWS/CertificadosParticipanteNombre", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> CertificadosParticipanteNombreAsync(string NombreUsuario, string Token, string Nombre, string Apellido);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CertificadosWSSoapChannel : QACIglesia.Infrastructure.ServiceReferenceInfotep.CertificadosWSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CertificadosWSSoapClient : System.ServiceModel.ClientBase<QACIglesia.Infrastructure.ServiceReferenceInfotep.CertificadosWSSoap>, QACIglesia.Infrastructure.ServiceReferenceInfotep.CertificadosWSSoap {
        
        public CertificadosWSSoapClient() {
        }
        
        public CertificadosWSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CertificadosWSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertificadosWSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CertificadosWSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable CertificadosParticipanteDocumento(string NombreUsuario, string Token, string NoDocumento) {
            return base.Channel.CertificadosParticipanteDocumento(NombreUsuario, Token, NoDocumento);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CertificadosParticipanteDocumentoAsync(string NombreUsuario, string Token, string NoDocumento) {
            return base.Channel.CertificadosParticipanteDocumentoAsync(NombreUsuario, Token, NoDocumento);
        }
        
        public System.Data.DataTable CertificadosParticipanteNombre(string NombreUsuario, string Token, string Nombre, string Apellido) {
            return base.Channel.CertificadosParticipanteNombre(NombreUsuario, Token, Nombre, Apellido);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> CertificadosParticipanteNombreAsync(string NombreUsuario, string Token, string Nombre, string Apellido) {
            return base.Channel.CertificadosParticipanteNombreAsync(NombreUsuario, Token, Nombre, Apellido);
        }
    }
}
